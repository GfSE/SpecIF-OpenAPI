swagger: '2.0'
info:
  version: v1.0
  title: SpecIF API
  description: Web API for the Specification Integration Facility (SpecIF).
  contact:
    name: The SpecIF team at Gesellschaft f√ºr Systems Engineering (GfSE) e.V.
    url: 'https://specif.de'
  license:
    name: Apache License 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
paths:
  '/specif/v1.0/projects':
    get:
      tags:
        - project
      summary: Return all projects; to limit the size only root properties are delivered.
      operationId: getAllProjects
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/project'
    post:
      tags:
        - project
      summary: Create a project with supplied elements; the supplied ID must not exist.
      operationId: createProject
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters: []
      responses:
        '201':
          description: Success
  '/specif/v1.0/projects/{pid}':
    get:
      tags:
        - project
      summary: Return the project with the given ID; to limit the size only ??? are delivered.
      operationId: getProjectById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    delete:
      tags:
        - project
      summary: Delete the project with all content; the supplied ID must exist.
      operationId: deleteProjectById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
  '/specif/v1.0/projects/{pid}/dataTypes':
    get:
      tags:
        - dataType
      summary: Return all dataTypes.
      operationId: getAllDataTypes
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
      responses:
        '200':
          description: List of dataTypes suceessfully returned.
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/dataType'
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    post:
      tags:
        - dataType
      summary: Create a dataType; the supplied ID must not exist.
      operationId: createDataType
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    put:
      tags:
        - dataType
      summary: Update the dataType; the supplied ID must exist.
      operationId: updateDataType
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
  '/specif/v1.0/projects/{pid}/dataTypes/{id}':
    get:
      tags:
        - dataType
      summary: Return the dataType with the given ID.
      operationId: getDataTypeById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
        - name: id
          in: path
          description: The data type ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    delete:
      tags:
        - dataType
      summary: Delete the dataType; the supplied ID must exist.
      operationId: deleteDataTypeById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
        - name: id
          in: path
          description: The hierarchy ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
  '/specif/v1.0/projects/{pid}/hierarchies':
    get:
      tags:
        - hierarchy
      summary: Get all hierarchies (root-nodes) without their sub-trees (nodes).
      operationId: getAllHierarchies
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/node'
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    post:
      tags:
        - hierarchy
      summary: Create a hierarchy (sub-tree) with supplied nodes; the supplied ID must not exist. ?parent=nodeId - the sub-tree will be inserted as first child; ?predecessor=nodeId - the sub-tree will be inserted after the specified node; no query - the sub-tree will be inserted as first element at root level.
      operationId: createHierarchy
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
        - name: hierarchy
          in: body
          description: ''
          required: false
          schema:
            $ref: '#/definitions/node'
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    put:
      tags:
        - hierarchy
      summary: Update an existing hierarchy (sub-tree) with supplied nodes; the supplied ID must exist somewhere in any hierarchy.
      operationId: updateHierarchy
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
        - name: hierarchy
          in: body
          description: ''
          required: false
          schema:
            $ref: '#/definitions/node'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
  '/specif/v1.0/projects/{pid}/hierarchies/{id}':
    get:
      tags:
        - hierarchy
      summary: Get hierarchy (sub-tree) with all nodes; the supplied ID must exist somewhere in any hierarchy.
      operationId: getHierarchyById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
        - name: id
          in: path
          description: The hierarchy ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/node'
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
    delete:
      tags:
        - hierarchy
      summary: Delete hierarchy (sub-tree) with all nodes; the supplied ID must exist somewhere in any hierarchy.
      operationId: deleteHierarchyById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: pid
          in: path
          description: The project ID.
          required: true
          type: string
        - name: id
          in: path
          description: The hierarchy ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
  '/specif/v1.0/nodes/root-nodes':
    get:
      tags:
        - Node
      summary: Returns all available root nodes.
      operationId: GetRootNodes
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/node'
  '/specif/v1.0/nodes/{parentNodeId}/child-nodes':
    get:
      tags:
        - Node
      summary: Returns one level of child nodes for a parent node.
      operationId: GetChildNodes
      consumes: []
      produces:
        - application/json
      parameters:
        - name: parentNodeId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/node'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/nodes/parent/{parentNodeId}':
    post:
      tags:
        - Node
      summary: Add a new node to a parent node with given ID.
      operationId: AddChildNode
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: parentNodeId
          in: path
          description: The parent node ID.
          required: true
          type: string
        - name: node
          in: body
          description: The new child node.
          required: false
          schema:
            $ref: '#/definitions/node'
      responses:
        '200':
          description: Success
  /specif/v1.0/nodes:
    put:
      tags:
        - Node
      summary: Updates an existing node.
      operationId: UpdateNode
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: node
          in: body
          description: The node to update.
          required: false
          schema:
            $ref: '#/definitions/node'
      responses:
        '201':
          description: Success
  '/specif/v1.0/nodes/{id}':
    delete:
      tags:
        - Node
      summary: Delete a node with the given ID.
      operationId: DeleteNode
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The node ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
  '/specif/v1.0/nodes/move/{nodeId}/to/{newParentId}/position/{position}':
    put:
      tags:
        - Node
      summary: Moves an existion node and all child nodes to a new parent.
      operationId: '{FC0EF587-8E82-41B6-9149-4EF87EE21E6F}'
      consumes: []
      produces:
        - application/json
      parameters:
        - name: nodeId
          in: path
          description: The id of the node to move.
          required: true
          type: string
        - name: newParentId
          in: path
          description: The id of the new parent.
          required: true
          type: string
        - name: position
          in: path
          description: The desired node position.
          required: true
          type: string
      responses:
        '200':
          description: Success
  /specif/v1.0/primitive-types:
    get:
      tags:
        - PrimitiveTypes
      summary: Returns a list with the names of the available primitive types.
      operationId: GetPrimitiveTypeList
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: List of primitive types suceessfull returned.
          schema:
            uniqueItems: false
            type: array
            items:
              type: string
  /specif/v1.0/property-classes:
    get:
      tags:
        - PropertyClass
      summary: Returns all property classes with alll available revisions.
      operationId: GetAllPropertyClasses
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/PropertyClass'
        '400':
          description: Bad Request
  '/specif/v1.0/property-classes/{id}':
    get:
      tags:
        - PropertyClass
      summary: Returns the main/latest revision of the property class with the given ID.
      operationId: GetPropertyClassById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PropertyClass'
        '400':
          description: Bad Request
        '404':
          description: Not Found or No Permission
  '/specif/v1.0/property-classes/{id}/revisions':
    get:
      tags:
        - PropertyClass
      summary: Returns all property class revisions for the given id.
      operationId: GetAllPropertyClassRevisions
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/PropertyClass'
  '/specif/v1.0/property-classes/{id}/revisions/{revision}':
    get:
      tags:
        - PropertyClass
      summary: Returns the property class with the specific revision.
      operationId: GetPropertyClassRevision
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The property class ID.
          required: true
          type: string
        - name: revision
          in: path
          description: The property class revision.
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/StatementClass'
        '404':
          description: Not Found
  '/specif/v1.0/resources/{id}':
    get:
      tags:
        - Resource
      summary: Returns the latest version of the resource with the given ID.
      operationId: GetResourceById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The resource ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
  '/specif/v1.0/resources/{id}/revisions':
    get:
      tags:
        - Resource
      summary: Returns a list of all revisions for the resource with the given ID.
      operationId: GetAllResourceRevisions
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Resource'
  '/specif/v1.0/resources/{id}/revisions/{revision}':
    get:
      tags:
        - Resource
      summary: Returns a specific revision for the resource with the given ID.
      operationId: GetResourceRevision
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
        - name: revision
          in: path
          description: ''
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
  '/specif/v1.0/resources/{id}/branches/{branch}':
    get:
      tags:
        - Resource
      summary: Returns the latest revision for the resource with the given ID in the given branch.
      operationId: GetLatestResourceRevisionInBranch
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
        - name: branch
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
  /specif/v1.0/resources:
    post:
      tags:
        - Resource
      summary: Adds a new resource to the SpecIF repository.
      operationId: AddNewResource
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: resource
          in: body
          description: ''
          required: false
          schema:
            $ref: '#/definitions/Resource'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Resource'
  /specif/v1.0/resource-classes:
    get:
      tags:
        - ResourceClass
      summary: Returns all resource classes with all available revisions.
      operationId: GetAllResourceClasses
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ResourceClass'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/resource-classes/{id}':
    get:
      tags:
        - ResourceClass
      summary: Returns the main/latest revision of the resource class with the given ID.
      operationId: GetResourceClassById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceClass'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/resource-classes/{id}/revisions':
    get:
      tags:
        - ResourceClass
      summary: Returns all resource class revisions for the given id.
      operationId: GetAllResourceClassRevisions
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ResourceClass'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/resource-classes/{id}/revisions/{revision}':
    get:
      tags:
        - ResourceClass
      summary: Returns the resource class with the specific revision.
      operationId: GetResourceClassRevision
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The resource class ID.
          required: true
          type: string
        - name: revision
          in: path
          description: The resource class revision.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceClass'
        '404':
          description: Not Found
  '/specif/v1.0/statements/{id}':
    get:
      tags:
        - Statement
      summary: Returns the main/latest revision of the statement nwith the given ID.
      operationId: GetStatementById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Statement'
  '/specif/v1.0/statements/{id}/revisions':
    get:
      tags:
        - Statement
      summary: Returns all available revisions for the statement wit the given ID.
      operationId: GetAllStatementRevisions
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The statement id.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Resource'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/{id}/revisions/{revision}':
    get:
      tags:
        - Statement
      summary: Returns a specific revision for the statement with the given id.
      operationId: GetStatementRevision
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The statement id.
          required: true
          type: string
        - name: revision
          in: path
          description: The statement revision.
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/subject/{subjectId}':
    get:
      tags:
        - Statement
      summary: Returns all statements for the subject resource with the given ID and the main/latest subject revision.
      operationId: GetStatementsForMainLatestSubject
      consumes: []
      produces:
        - application/json
      parameters:
        - name: subjectId
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/object/{objectId}':
    get:
      tags:
        - Statement
      summary: Returns all statements for the object resource with the given ID and the main/latest object revision.
      operationId: GetStatementsForMainLatestObject
      consumes: []
      produces:
        - application/json
      parameters:
        - name: objectId
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/subject/{subjectId}/subject-revision/{revision}':
    get:
      tags:
        - Statement
      summary: Returns all statements for the subject resource with the given ID and the given subject revision.
      operationId: GetStatementsBySubject
      consumes: []
      produces:
        - application/json
      parameters:
        - name: subjectId
          in: path
          description: ''
          required: true
          type: string
        - name: revision
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/object/{objectId}/object-revision/{revision}':
    get:
      tags:
        - Statement
      summary: Returns all statements for the object resource with the given ID and the given object revision.
      operationId: GetStatementsByObject
      consumes: []
      produces:
        - application/json
      parameters:
        - name: objectId
          in: path
          description: ''
          required: true
          type: string
        - name: revision
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/resource/{resourceId}':
    get:
      tags:
        - Statement
      summary: Returns all statements for a resource with a given ID and main/latest revision - resource is uses as subject OR object for the statement.
      operationId: GetAllStatementsForMainLatestResource
      consumes: []
      produces:
        - application/json
      parameters:
        - name: resourceId
          in: path
          description: The resource element ID.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statements/resource/{resourceId}/resource-revision/{revision}':
    get:
      tags:
        - Statement
      summary: Returns all statements for a resource with a given ID and teh given revision - resource is uses as subject OR object for the statement.
      operationId: GetAllStatementsForResource
      consumes: []
      produces:
        - application/json
      parameters:
        - name: resourceId
          in: path
          description: The resource element ID.
          required: true
          type: string
        - name: revision
          in: path
          description: The resource element revision.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  /specif/v1.0/statements:
    post:
      tags:
        - Statement
      summary: 'Add a new statement. If a statement with the given ID is still existant, a new revision is created automatically.'
      operationId: AddNewStatement
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces:
        - application/json
      parameters:
        - name: statemenet
          in: body
          description: The statement to create.
          required: false
          schema:
            $ref: '#/definitions/Statement'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Statement'
        '400':
          description: Bad Request
  /specif/v1.0/statement-classes:
    get:
      tags:
        - StatementClass
      summary: Returns all statement classes with all available revisions.
      operationId: GetAllStatementClasses
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/StatementClass'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statement-classes/{id}':
    get:
      tags:
        - StatementClass
      summary: Returns the main/latest revision of the statement class with the given ID.
      operationId: GetStatementClassById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StatementClass'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/specif/v1.0/statement-classes/{id}/revisions':
    get:
      tags:
        - StatementClass
      summary: Returns all statement class revisions for the given id.
      operationId: GetAllStatementClassRevisions
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/StatementClass'
  '/specif/v1.0/statement-classes/{id}/revisions/{revision}':
    get:
      tags:
        - StatementClass
      summary: Returns the statement class with the specific revision.
      operationId: GetStatementClassRevision
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The statement class ID.
          required: true
          type: string
        - name: revision
          in: path
          description: The statement class revision.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StatementClass'
        '404':
          description: Not Found
definitions:
  project:
    type: object
    properties:
      id:
        type: string
      changedAt:
        format: date-time
        type: string
  dataType:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      description:
        $ref: '#/definitions/Value'
      type:
        type: string
      maxLength:
        format: int32
        type: integer
      accuracy:
        format: int32
        type: integer
      min:
        format: int32
        type: integer
      max:
        format: int32
        type: integer
      values:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/EnumValue'
      multiple:
        type: boolean
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  Revision:
    type: object
    properties: {}
  Value:
    type: object
    properties:
      languageValues:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/LanguageValue'
  EnumValue:
    type: object
    properties:
      id:
        type: string
      title:
        $ref: '#/definitions/Value'
  LanguageValue:
    type: object
    properties:
      text:
        type: string
      language:
        type: string
  node:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      description:
        $ref: '#/definitions/Value'
      resource:
        type: object
      nodes:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/node'
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  PropertyClass:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      description:
        $ref: '#/definitions/Value'
      dataType:
        $ref: '#/definitions/Key'
      multiple:
        type: boolean
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  Key:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
  StatementClass:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      description:
        $ref: '#/definitions/Value'
      extends:
        $ref: '#/definitions/Key'
      icon:
        type: string
      instantiation:
        uniqueItems: false
        type: array
        items:
          type: string
      propertyClasses:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Key'
      subjectClasses:
        uniqueItems: false
        type: array
        items:
          type: string
      objectClasses:
        uniqueItems: false
        type: array
        items:
          type: string
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  Resource:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      class:
        $ref: '#/definitions/Key'
      description:
        $ref: '#/definitions/Value'
      properties:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Property'
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  Property:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      value:
        $ref: '#/definitions/Value'
      description:
        $ref: '#/definitions/Value'
      class:
        $ref: '#/definitions/Key'
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  ResourceClass:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      description:
        $ref: '#/definitions/Value'
      extends:
        $ref: '#/definitions/Key'
      icon:
        type: string
      isHeading:
        type: boolean
      instantiation:
        uniqueItems: false
        type: array
        items:
          type: string
      propertyClasses:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Key'
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
  Statement:
    type: object
    properties:
      id:
        type: string
      revision:
        $ref: '#/definitions/Revision'
      replaces:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Revision'
      title:
        $ref: '#/definitions/Value'
      class:
        $ref: '#/definitions/Key'
      description:
        $ref: '#/definitions/Value'
      subject:
        $ref: '#/definitions/Key'
      object:
        $ref: '#/definitions/Key'
      properties:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/Property'
      changedAt:
        format: date-time
        type: string
      changedBy:
        type: string
tags: []
